{"version":3,"sources":["components/Header.js","common/Button.js","components/List.js","components/ListsHeader.js","components/ListsFooter.js","commonFunc/Sort.js","components/MainSection.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","title","className","Button","onClick","callBack","text","defaultProps","List","changeStatus","mounted","ableModify","state","modifyLists","list","showAddDeleteBtn","id","name","price","remarks","status","deleteStatus","setState","tempStorage","changeDeleteStatus","updateDeleteIndex","updateTempStorage","event","type","target","value","updateList","this","ableAdd","ableDelete","onChange","checked","placeholder","defaultValue","isResetCheck","Component","lists","ListsHeader","newListInputToggle","addList","deleteListToggle","deleteList","sortedLists","updateNewListStorage","newList","willDeleteListIndexArr","isShowAddDeleteBtn","length","ListsFooter","sortType","changeSortType","originQuickSort","items","quicksort","array","left","right","mid","pivot","temp","partition","ascQuickSort","descQuickSort","MainSection","newSortType","resetChecked","indexOf","repeatIndex","findIndex","item","splice","lastId","setTimeout","listBody","scrollTo","top","scrollHeight","behavior","slice","forEach","sameIndex","data","isListModifing","ref","section","map","key","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a697b72f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Header(props) {\n  const { title } = props;\n  return (\n    <div className=\"header\">\n      <h2>{title ? title : 'DailyDrink(預設)'}</h2>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Header;\n\n\n\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Button(props) {\n  return (\n    <div className={props.className} onClick={props.callBack}>\n      {props.text}\n    </div>\n  );\n}\n\nButton.defaultProps = {\n  className: 'green',\n  callBack: () => {},\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  callBack: PropTypes.func,\n};\n\nexport default Button;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '../common/Button';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ableModify: false,\n      tempStorage: {},\n      deleteStatus: props.list.deleteStatus,\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.isResetCheck && state.deleteStatus) {\n      // console.log(props.isResetCheck, state.deleteStatus)\n      return {\n        deleteStatus: false,\n      }\n    }\n    return null;\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  changeStatus = () => { // 修改取消用同一個\n    if (!this.mounted) return;\n    const { ableModify } = this.state;\n    const { modifyLists, list, showAddDeleteBtn } = this.props;\n    const { id, name, price, remarks, status, deleteStatus } = list;\n    modifyLists({\n      id,\n      name,\n      price,\n      remarks,\n      status: !status,\n      deleteStatus,\n    });\n    this.setState(() => ({\n      ableModify: !ableModify,\n      tempStorage: {},\n    }))\n    !ableModify ? showAddDeleteBtn(false) : showAddDeleteBtn(true)\n  }\n\n  changeDeleteStatus = () => {\n    if (!this.mounted) return;\n    const { deleteStatus } = this.state;\n    const { list, updateDeleteIndex } = this.props;\n    const { id } = list;\n    this.setState(() => ({\n      deleteStatus: !deleteStatus,\n    }), () => {\n      updateDeleteIndex(id);\n    })\n  }\n\n  updateTempStorage = (event, type) => {\n    if (!this.mounted) return;\n    const { tempStorage } = this.state;\n    tempStorage[type] = event.target.value;\n    this.setState(() => ({\n      tempStorage,\n    }))\n  }\n\n  updateList = () => {\n    if (!this.mounted) return;\n    const { tempStorage } = this.state;\n    const { modifyLists, list, showAddDeleteBtn } = this.props;\n    const { id, name, price, remarks, deleteStatus } = list;\n    modifyLists({\n      id,\n      name: tempStorage['name'] ? tempStorage['name'] : name,\n      price: tempStorage['price'] ? tempStorage['price'] : price,\n      remarks: tempStorage['remarks'] ? tempStorage['remarks'] : remarks,\n      status: false,\n      deleteStatus,\n    });\n    this.setState(() => ({\n      ableModify: false,\n      tempStorage: {},\n    }))\n    showAddDeleteBtn(true)\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const { ableModify, deleteStatus } = this.state;\n    const { list, ableAdd, ableDelete } = this.props;\n    return (\n      <Fragment>\n        <div className=\"listContainer\">\n          {\n            ableDelete && <input type=\"checkbox\" className=\"deleteInput\" value=\"\" onClick={ () => { this.changeDeleteStatus() }} onChange={ () => { }} checked={ deleteStatus } />\n          }\n          <div className=\"item drinkId\">{ list.id }</div>\n          <div className=\"item drinkName\">\n            {\n              !ableModify ? list.name :\n              <input\n                type=\"text\"\n                placeholder=\"請輸入名稱\"\n                className=\"input-text\"\n                defaultValue={ list.name }\n                onChange={ (event) => { this.updateTempStorage(event, 'name') }}\n              />\n            }\n          </div>\n          \n          <div className=\"item drinkPrice\">\n            {\n              !ableModify ? `${list.price} 元` :\n              <input\n                type=\"text\"\n                placeholder=\"請輸入價錢\"\n                className=\"input-text\"\n                defaultValue={ list.price }\n                onChange={ (event) => { this.updateTempStorage(event, 'price') }}\n              />\n            }\n          </div>\n\n          <div className=\"item\">\n            {\n              !ableModify ? list.remarks :\n              <textarea\n                type=\"text\"\n                placeholder=\"請輸入價錢\"\n                className=\"input-text\"\n                defaultValue={ list.remarks }\n                onChange={ (event) => { this.updateTempStorage(event, 'remarks') }}\n              />\n            }\n          </div>\n          <div className=\"item drinkStatus\">\n            {\n              list.status &&\n              <Fragment>\n                <Button\n                  className=\"button red inline-block align-right\"\n                  text=\"保存\"\n                  callBack={() => { this.updateList() }}\n                />\n                <Button\n                  className=\"button red inline-block align-right\"\n                  text=\"取消\"\n                  callBack={() => { this.changeStatus() }}\n                />\n              </Fragment>\n            }\n            { !list.status && !ableDelete && !ableAdd &&\n              <Button\n                className=\"button red inline-block align-right\"\n                text=\"修改\"\n                callBack={() => { this.changeStatus() }}\n              />\n            }\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nList.defaultProps = {\n  lists: [],\n  showAddDeleteBtn: () => {},\n};\n\nList.propTypes = {\n  lists: PropTypes.array.isRequired,\n  showAddDeleteBtn: PropTypes.func,\n};\n\nexport default List;","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '../common/Button';\n\nfunction ListsHeader(props) {\n  const {\n    ableDelete,\n    ableAdd,\n    newListInputToggle,\n    addList,\n    deleteListToggle,\n    deleteList,\n    sortedLists,\n    updateNewListStorage,\n    newList,\n    willDeleteListIndexArr,\n    isShowAddDeleteBtn,\n  } = props;\n  return (\n    <Fragment>\n      {\n        isShowAddDeleteBtn &&\n        <Fragment>\n          {\n            !ableDelete &&\n            <Button\n              className={`button inline-block align-right ${ ableAdd ? 'red' : 'green'}`}\n              text={ableAdd ? '取消新增' : '新增'}\n              callBack={() => { newListInputToggle() }}\n            />\n          }\n          {\n            ableAdd &&\n            <Button\n              className=\"button green inline-block align-right\"\n              text='確定新增'\n              callBack={() => { addList() }}\n            />\n          }\n          {\n            !ableAdd && sortedLists.length !== 0 &&\n            <Button\n              className=\"button red inline-block align-right\"\n              text={ ableDelete ? '取消動作' : '批次刪除'}\n              callBack={() => { deleteListToggle() }}\n            />\n          }\n          {\n            ableDelete && willDeleteListIndexArr.length !== 0 &&\n            <Button\n              className=\"button green inline-block align-right\"\n              text='確定刪除'\n              callBack={() => { deleteList() }}\n            />\n          }\n        </Fragment>  \n      }\n\n      {\n        ableAdd &&\n        <div className=\"newListSection\">\n          <input\n            type=\"text\"\n            placeholder=\"請輸入\b\b\b名稱\"\n            className=\"input-text\"\n            defaultValue={ newList.name }\n            onChange={ (event) => { updateNewListStorage(event, 'name') }}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"請輸入價錢\"\n            className=\"input-text\"\n            defaultValue={ newList.price }\n            onChange={ (event) => { updateNewListStorage(event, 'price') }}\n          />\n          <textarea\n            type=\"text\"\n            placeholder=\"請輸入備註\"\n            className=\"input-text\"\n            defaultValue={ newList.remarks }\n            onChange={ (event) => { updateNewListStorage(event, 'remarks') }}\n          />\n        </div>\n      }\n    </Fragment>\n  );\n}\n\nListsHeader.defaultProps = {\n  ableAdd: false,\n  ableDelete: false,\n  newListInputToggle: () => {},\n  addList: () => {},\n  deleteListToggle: () => {},\n  deleteList: () => {},\n  sortedLists: [],\n  updateNewListStorage: () => {},\n  newList: {},\n  willDeleteListIndexArr: [],\n  isShowAddDeleteBtn: true,\n};\n\nListsHeader.propTypes = {\n  ableAdd: PropTypes.bool,\n  ableDelete: PropTypes.bool,\n  newListInputToggle: PropTypes.func,\n  addList: PropTypes.func,\n  deleteListToggle: PropTypes.func,\n  deleteList: PropTypes.func,\n  sortedLists: PropTypes.array,\n  updateNewListStorage: PropTypes.func,\n  newList: PropTypes.object,\n  willDeleteListIndexArr: PropTypes.array,\n  isShowAddDeleteBtn: PropTypes.bool,\n};\n\nexport default ListsHeader;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '../common/Button';\n\nfunction ListsFooter(props) {\n  const { sortType, changeSortType } = props;\n  return (\n    <div className=\"listsFooter\">\n        <Button\n          className={`sortBtn button red inline-block align-right ${sortType === 'origin' ? 'selected' : '' }`}\n          text=\"按訂單成立時間\"\n          callBack={() => { changeSortType('origin') }}\n        />\n        <Button\n          className={`sortBtn button red inline-block align-right ${sortType === 'asc' ? 'selected' : '' }`}\n          text=\"價格低到高\"\n          callBack={() => { changeSortType('asc') }}\n        />\n        <Button\n          className={`sortBtn button red inline-block align-right ${sortType === 'desc' ? 'selected' : '' }`}\n          text=\"價格高到低\"\n          callBack={() => { changeSortType('desc') }}\n        />\n      </div>\n  );\n}\n\nListsFooter.defaultProps = {\n  changeSortType: () => {},\n};\n\nListsFooter.propTypes = {\n  sortType: PropTypes.string,\n  changeSortType: PropTypes.func,\n};\n\nexport default ListsFooter;","export const originQuickSort = (() => {\n  const partition = (array, left, right) => {\n    let pivot = array[(left + right) >>> 1];\n    while (left <= right) {\n      while (array[left].id < pivot.id) left++;\n      while (array[right].id > pivot.id) right--;\n      \n      if (left <= right) {\n        let temp = array[left];\n        array[left++] = array[right];\n        array[right--] = temp;\n      }\n    }\n    return left;\n  };\n  const quicksort = (array, left, right) => {\n    let mid = partition(array, left, right);\n    if (left < mid - 1) quicksort(array, left, mid - 1);\n    if (right > mid) quicksort(array, mid, right);\n  };\n  return (items) => {\n    quicksort(items, 0, items.length - 1);\n    return items;\n  };\n})();\n\nexport const ascQuickSort = (() => {\n  const partition = (array, left, right) => {\n    let pivot = array[(left + right) >>> 1];\n    while (left <= right) {\n      while (array[left].price < pivot.price) left++;\n      while (array[right].price > pivot.price) right--;\n      \n      if (left <= right) {\n        let temp = array[left];\n        array[left++] = array[right];\n        array[right--] = temp;\n      }\n    }\n    return left;\n  };\n  const quicksort = (array, left, right) => {\n    let mid = partition(array, left, right);\n    if (left < mid - 1) quicksort(array, left, mid - 1);\n    if (right > mid) quicksort(array, mid, right);\n  };\n  return (items) => {\n    quicksort(items, 0, items.length - 1);\n    return items;\n  };\n})();\n\nexport const descQuickSort = (() => {\n  const partition = (array, left, right) => {\n    let pivot = array[(left + right) >>> 1];\n    while (left <= right) {\n      while (array[left].price > pivot.price) left++;\n      while (array[right].price < pivot.price) right--;\n      \n      if (left <= right) {\n        let temp = array[left];\n        array[left++] = array[right];\n        array[right--] = temp;\n      }\n    }\n    return left;\n  };\n  const quicksort = (array, left, right) => {\n    let mid = partition(array, left, right);\n    if (left < mid - 1) quicksort(array, left, mid - 1);\n    if (right > mid) quicksort(array, mid, right);\n  };\n  return (items) => {\n    quicksort(items, 0, items.length - 1);\n    return items;\n  };\n})();","import React, { Component } from 'react';\n\nimport List from '../components/List';\nimport ListsHeader from '../components/ListsHeader';\nimport ListsFooter from '../components/ListsFooter';\n\nimport { originQuickSort, ascQuickSort, descQuickSort } from '../commonFunc/Sort';\n\nclass MainSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: [\n        {\n          \"id\": 0,\n          \"name\": \"訂單1\",\n          \"price\": 25,\n          \"remarks\": \"紅茶1杯 綠茶1杯\",\n          \"status\": false, // false 不可修改 、 true可修改\n          \"deleteStatus\": false, // false 不可刪除 、 true可刪除\n        },\n        {\n          \"id\": 1,\n          \"name\": \"訂單2\",\n          \"price\": 50,\n          \"remarks\": \"紅茶2杯 綠茶2杯\",\n          \"status\": false,\n          \"deleteStatus\": false,\n        },\n        {\n          \"id\": 2,\n          \"name\": \"訂單3\",\n          \"price\": 75,\n          \"remarks\": \"紅茶3杯 綠茶3杯\",\n          \"status\": false,\n          \"deleteStatus\": false,\n        },\n        {\n          \"id\": 3,\n          \"name\": \"訂單4\",\n          \"price\": 100,\n          \"remarks\": \"紅茶4杯 綠茶4杯\",\n          \"status\": false,\n          \"deleteStatus\": false,\n        },\n        {\n          \"id\": 4,\n          \"name\": \"訂單5\",\n          \"price\": 125,\n          \"remarks\": \"紅茶5杯 綠茶5杯\",\n          \"status\": false,\n          \"deleteStatus\": false,\n        }\n      ],\n      sortType: 'origin',\n      newList: { // 新list暫存\n        name: '',\n        price: 0,\n        remarks: '',\n      },\n      ableAdd: false,\n      ableDelete: false,\n      willDeleteListIndexArr: [],\n      isResetCheck: false,\n      isShowAddDeleteBtn: true,\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  changeSortType = (newSortType) => {\n    if (!this.mounted) return;\n    const { sortType } = this.state;\n    if (newSortType === sortType) return;\n    this.setState(() => ({\n      sortType: newSortType,\n    }));\n  }\n\n  newListInputToggle = () => {\n    if (!this.mounted) return;\n    const { ableAdd } = this.state;\n    this.setState(() => ({\n      ableAdd: !ableAdd,\n      newList: {},\n    }))\n  }\n\n  deleteListToggle = () => {\n    if (!this.mounted) return;\n    const { ableDelete } = this.state;\n    this.setState(() => ({\n      ableDelete: !ableDelete,\n      willDeleteListIndexArr: [],\n    }));\n    if (ableDelete) this.resetChecked();\n  }\n\n  resetChecked = () => {\n    this.setState(() => ({\n      isResetCheck: true,\n    }), () => {\n      this.setState(() => ({\n        isResetCheck: false,\n      }))\n    })\n  }\n\n  updateNewListStorage = (event, type) => {\n    if (!this.mounted) return;\n    const { newList } = this.state;\n    newList[type] = event.target.value;\n    this.setState(() => ({\n      newList,\n    }))\n  }\n\n  updateDeleteIndex = (id) => {\n    if (!this.mounted) return;\n    if (this.state.willDeleteListIndexArr.indexOf(id) === -1) {\n      this.setState(() => ({\n        willDeleteListIndexArr: [...this.state.willDeleteListIndexArr, id],\n      }))\n    } else {\n      const repeatIndex = this.state.willDeleteListIndexArr.findIndex((item) => {\n        return item === id;\n      })\n      if (repeatIndex >= 0) {\n        this.state.willDeleteListIndexArr.splice(repeatIndex, 1);\n        this.setState(() => ({\n          willDeleteListIndexArr: [...this.state.willDeleteListIndexArr]\n        }))\n      }\n    }\n  }\n\n  addList = () => {\n    if (!this.mounted) return;\n    const { lists, newList } = this.state;\n    const lastId = lists.length !== 0 ? lists[lists.length - 1].id : 0;\n    this.setState(() => ({\n      lists: [...lists, {\n        id: lastId + 1,\n        name: newList.name,\n        price: newList.price,\n        remarks: newList.remarks,\n        status: false,\n        deleteStatus: false,\n      }],\n      // reduction status\n      ableAdd: false,\n      newList: {},\n    }))\n\n    setTimeout(() => {\n      this.listBody.scrollTo({\n        top: this.listBody.scrollHeight,\n        behavior: 'smooth'\n      })\n    }, 0);\n  }\n\n  deleteList = () => {\n    if (!this.mounted) return;\n    const { lists, willDeleteListIndexArr } = this.state;\n    let temp = lists.slice(0);\n    if (willDeleteListIndexArr.length > 0) {\n      willDeleteListIndexArr.forEach((item) => {\n        const sameIndex = temp.findIndex((list) => {\n          return list.id === item;\n        })\n        if (sameIndex >= 0) temp.splice(sameIndex, 1);\n      })\n      \n      this.setState(() => ({\n        lists: [...temp],\n        ableDelete: false,\n        willDeleteListIndexArr: [],\n      }))\n    }\n  }\n\n  modifyLists = (data) => {\n    if (!this.mounted) return;\n    const { lists } = this.state;\n    const { id } = data;\n    let temp = lists.slice(); // unuse redux sideEffect\n    const sameIndex = lists.findIndex((list) => { return list.id === id });\n    if (sameIndex >= 0) {\n      temp[sameIndex] = data;\n    } else {\n      // addList　也可在這邊新增List\n    }\n    this.setState({ lists: temp })\n  }\n\n  showAddDeleteBtn = (isListModifing) => {\n    if (!this.mounted) return;\n    this.setState(() => ({\n      isShowAddDeleteBtn: isListModifing,\n    }))\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const { lists, sortType, ableAdd, newList, ableDelete, willDeleteListIndexArr, isResetCheck, isShowAddDeleteBtn } = this.state;\n    let sortedLists = [];\n    switch (sortType) {\n      case 'asc':\n        sortedLists = ascQuickSort(lists);\n      　break;\n      case 'desc':\n        sortedLists = descQuickSort(lists);\n      　break;\n      default:\n        sortedLists = originQuickSort(lists);\n    }\n\n    return (\n      <div className=\"mainSection\">\n        <ListsHeader\n          ableDelete={ableDelete}\n          ableAdd={ableAdd}\n          newListInputToggle={this.newListInputToggle}\n          addList={this.addList}\n          deleteListToggle={this.deleteListToggle}\n          deleteList={this.deleteList}\n          sortedLists={sortedLists}\n          updateNewListStorage={this.updateNewListStorage}\n          newList={newList}\n          willDeleteListIndexArr={willDeleteListIndexArr}\n          isShowAddDeleteBtn={isShowAddDeleteBtn}\n        />\n\n        <div className=\"listsBox\">\n          <div className=\"listsHeader\">\n          <div className=\"item\">編號</div>\n            <div className=\"item\">名稱</div>\n            <div className=\"item\">總價錢</div>\n            <div className=\"item\">備註</div>\n            <div className=\"item\">狀態</div>\n          </div>\n\n          <div className=\"listsBody\" ref={(section) => { this.listBody = section;} }>\n            { sortedLists.length === 0 && <div>目前沒有任何訂單</div>}\n            { sortedLists.length > 0 &&\n              sortedLists.map((list) => (\n                <List\n                  key={list.id} // can't duplicate // state will duplicate\n                  lists={lists}\n                  list={list}\n                  modifyLists={this.modifyLists}\n                  ableAdd={ableAdd}\n                  ableDelete={ableDelete}\n                  updateDeleteIndex={this.updateDeleteIndex}\n                  isResetCheck={isResetCheck}\n                  showAddDeleteBtn={this.showAddDeleteBtn}\n                />\n              ))\n            }\n          </div>\n          <ListsFooter sortType={sortType} changeSortType={this.changeSortType} />\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default MainSection;","import React from 'react';\n\nimport Header from '../src/components/Header'\nimport MainSection from '../src/components/MainSection'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header title=\"DailyDrink\" />\n      <MainSection />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}